<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Chris Woodall</title><link>/projects/</link><description>Recent content in Projects on Chris Woodall</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 01 Dec 2013 01:29:18 +0000</lastBuildDate><atom:link href="/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Simplified X86 Assembler and Emulator</title><link>/projects/2014-02-03-sx86-emulator/</link><pubDate>Sun, 01 Dec 2013 01:29:18 +0000</pubDate><guid>/projects/2014-02-03-sx86-emulator/</guid><description>While at BU I had an assignment for a class called EC327 which used a 16-bit RISC processor that the professors called &amp;ldquo;simplified x86&amp;rdquo;, also referred to as sx86. This was a very basic assembler, and the tool at the time was written in java, but had some issues with copying code in and out of the program requiring that you hand copy the code. To make my debugging easier I implemented an emulator in Javascript (it should be a valid node.</description></item><item><title>16 Channel 12-bit Floating Fine Adjustment DAC</title><link>/projects/2013-07-30-16-channel-floating-dac/</link><pubDate>Wed, 28 Aug 2013 01:29:18 +0000</pubDate><guid>/projects/2013-07-30-16-channel-floating-dac/</guid><description/></item><item><title>Artemis Synthesizer v2: Digital Audio Synthesizer Kit</title><link>/projects/2013-07-28-artemis-synth-v2/</link><pubDate>Mon, 29 Jul 2013 01:29:18 +0000</pubDate><guid>/projects/2013-07-28-artemis-synth-v2/</guid><description>The Artemis Synthesizer is a digital audio synthesizer kit developed in my spare time with help from the BU Electronic Design Facility. The kits purpose was to help teach a group of female high school freshmen in the Artemis summer program how to solder. Assembly was designed to take between 2 and 4 hours for a beginner, but should take closer to 30 minutes for someone with prior experience.
The synthesizer utilizes an ATMega328 and a 12-bit DAC to produce the audio, in its default mode you can play 4 different 8 note scales.</description></item><item><title>TTT: TTC TTS Tester for CMS and G minus 2</title><link>/projects/2013-07-29-ttt/</link><pubDate>Sun, 30 Jun 2013 01:29:18 +0000</pubDate><guid>/projects/2013-07-29-ttt/</guid><description>The TTT is a piece of test equipment design for CMS through the BU Electronic Design Facility (EDF). Its main function is to generate L1A (Level-1 Accept) trigger events and stream them to another piece of equipment and listen to that piece of equipment to see if its buffer is full.
The TTT runs a Xilinx Spartan-6 FPGA, with an Ethernet MAC I wrote, and communicates with a PC using a protocol called IPBus.</description></item><item><title>Monophonic Analog Synthesizer with AR Enveloping</title><link>/projects/2013-07-27-analog-synth-ec412/</link><pubDate>Sun, 21 Apr 2013 01:29:18 +0000</pubDate><guid>/projects/2013-07-27-analog-synth-ec412/</guid><description>This Monophonic Analog Synthesizer was designed by Christopher Woodall and Benjamin Havey. The synthesizer uses a homemade linearly actuated potentiometer as its input, a long with a button for articulation. The potentiometer voltage is fed through a linear to exponential converter and then a voltage controlled oscillator. The output of the VCO is then put through a analog multiplier designed using an opamp and discrete transistors which envelopes the square and triangle wave VCO outputs with a attack release (AR) envelope.</description></item><item><title>Object Detecting Laser Turret</title><link>/projects/2013-07-26-laser-turret-for-ec535/</link><pubDate>Sat, 20 Apr 2013 01:29:18 +0000</pubDate><guid>/projects/2013-07-26-laser-turret-for-ec535/</guid><description>The Laser Turret uses a webcam to track objects and then shoots a laser in the direction of the tracked object. The goal of is to process the images taken by the webcam and, using the results that comes from processing the images, control the servo motors appropriately to direct the beam of laser at the object. In the time given, we were able to accomplish the goals that we set for ourselves.</description></item><item><title>Firestarter v1: Hybrid Rocket Pressure Monitor &amp;amp; Igniter</title><link>/projects/2013-07-29-firestarter/</link><pubDate>Fri, 15 Mar 2013 01:29:18 +0000</pubDate><guid>/projects/2013-07-29-firestarter/</guid><description>Firestarter v1 was designed to open a pyro valve, preheat the fuel grain, and monitor the combustion chamber and N2O tank pressures for the BU Rocket Propulsion Group&amp;rsquo;s MkIII hybrid rocket engine. The pressure readings are all from full bridge pressure transducers which go through an instrumentation amplifier, 4th order Butterwirth filter and into an ADC. The board communicates to the world through and RS-422 connection and runs on STM32 Cortex-M3 microcontroller.</description></item><item><title>builds.cc v2</title><link>/projects/2013-08-15-builds-website/</link><pubDate>Wed, 15 Aug 2012 01:29:18 +0000</pubDate><guid>/projects/2013-08-15-builds-website/</guid><description/></item><item><title>NES Controller Controlled LED Cube</title><link>/projects/2013-08-30-nes-controlled-led-cube/</link><pubDate>Wed, 01 Feb 2012 01:29:18 +0000</pubDate><guid>/projects/2013-08-30-nes-controlled-led-cube/</guid><description/></item><item><title>Twelve Ounce: A Low-Cost Robot for Experimentation</title><link>/projects/2013-07-30-twelve-ounce/</link><pubDate>Wed, 01 Feb 2012 01:29:18 +0000</pubDate><guid>/projects/2013-07-30-twelve-ounce/</guid><description/></item><item><title>C4: Connect 4 Android Game</title><link>/projects/2013-07-30-c4-android/</link><pubDate>Thu, 15 Dec 2011 01:29:18 +0000</pubDate><guid>/projects/2013-07-30-c4-android/</guid><description>Have you ever wanted to Connect Four red or blue disks on a yellow background? Now is your chance! This implementation of the fun and traditional game utilizes the Android NDK, a C++ backend and the native Java SDK.
Play single player, against a silly AI, or against a Friend in an epic duel of the whits.</description></item><item><title>NOMIS: Simon Memory Game Clone</title><link>/projects/2013-07-30-nomis/</link><pubDate>Tue, 01 Feb 2011 01:29:18 +0000</pubDate><guid>/projects/2013-07-30-nomis/</guid><description>Nomis is a Simon-like memory game for the ATTiny85, which uses the ATTiny85. The game logic in the ATTiny85 was implemented using AVR C and takes up 983 bytes in program memory and 6 bytes in data memory. The implementation size comes in under 1kB, but could most certainly be smaller. The pin usage, however, is very conservative and the games electronics take up a total of 4 of the 6 available pins.</description></item></channel></rss>